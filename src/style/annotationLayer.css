[data-main-rotation="90"] {
    transform: rotate(90deg) translateY(-100%);
}

[data-main-rotation="180"] {
    transform: rotate(180deg) translate(-100%, -100%);
}

[data-main-rotation="270"] {
    transform: rotate(270deg) translateX(-100%);
}

#hiddenCopyElement,
.hiddenCanvasElement {
    position: absolute;
    top: 0;
    left: 0;
    width: 0;
    height: 0;
    display: none;
}

.annotationLayer {
    --annotation-unfocused-field-background: url("data:image/svg+xml;charset=UTF-8,<svg width='1px' height='1px' xmlns='http://www.w3.org/2000/svg'><rect width='100%' height='100%' style='fill:rgba(0, 54, 255, 0.13);'/></svg>");
    --input-focus-border-color: Highlight;
    --input-focus-outline: 1px solid Canvas;
    --input-unfocused-border-color: transparent;
    --input-disabled-border-color: transparent;
    --input-hover-border-color: black;
    --link-outline: none;
}

@media screen and (forced-colors: active) {
    .annotationLayer {
        --input-focus-border-color: CanvasText;
        --input-unfocused-border-color: ActiveText;
        --input-disabled-border-color: GrayText;
        --input-hover-border-color: Highlight;
        --link-outline: 1.5px solid LinkText;
    }

    .annotationLayer .buttonWidgetAnnotation:is(.checkBox,.radioButton) input:required,
    .annotationLayer .choiceWidgetAnnotation select:required,
    .annotationLayer .textWidgetAnnotation :is(input,textarea):required {
        outline: 1.5px solid selectedItem;
    }

    .annotationLayer .linkAnnotation {
        outline: var(--link-outline);
    }

    .annotationLayer .linkAnnotation:hover {
        -webkit-backdrop-filter: var(--hcm-highlight-filter);
        backdrop-filter: var(--hcm-highlight-filter);
    }

    .annotationLayer .linkAnnotation > a:hover {
        opacity: 0 !important;
        background: 0 0 !important;
        box-shadow: none;
    }

    .annotationLayer .popupAnnotation .popup {
        outline: calc(1.5px * var(--scale-factor)) solid CanvasText !important;
        background-color: ButtonFace !important;
        color: ButtonText !important;
    }

    .annotationLayer .highlightArea:hover::after {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        -webkit-backdrop-filter: var(--hcm-highlight-filter);
        backdrop-filter: var(--hcm-highlight-filter);
        content: "";
        pointer-events: none;
    }

    .annotationLayer .popupAnnotation.focused .popup {
        outline: calc(3px * var(--scale-factor)) solid Highlight !important;
    }
}

.annotationLayer {
    position: absolute;
    top: 0;
    left: 0;
    pointer-events: none;
    transform-origin: 0 0;
}

.annotationLayer[data-main-rotation="90"] .norotate {
    transform: rotate(270deg) translateX(-100%);
}

.annotationLayer[data-main-rotation="180"] .norotate {
    transform: rotate(180deg) translate(-100%, -100%);
}

.annotationLayer[data-main-rotation="270"] .norotate {
    transform: rotate(90deg) translateY(-100%);
}

.annotationLayer.disabled .popup,
.annotationLayer.disabled section {
    pointer-events: none;
}

.annotationLayer .annotationContent {
    position: absolute;
    width: 100%;
    height: 100%;
    pointer-events: none;
}

.freetext:is(.annotationLayer .annotationContent) {
    background: 0 0;
    border: none;
    inset: 0;
    overflow: visible;
    white-space: nowrap;
    font: 10px sans-serif;
    line-height: 1.35;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
}

.annotationLayer section {
    position: absolute;
    text-align: initial;
    pointer-events: auto;
    box-sizing: border-box;
    transform-origin: 0 0;
}

:is(.annotationLayer section):has(div.annotationContent) canvas.annotationContent {
    display: none;
}

.textLayer.selecting ~ .annotationLayer section {
    pointer-events: none;
}

.annotationLayer :is(.linkAnnotation,.buttonWidgetAnnotation.pushButton) > a {
    position: absolute;
    font-size: 1em;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

.annotationLayer :is(.linkAnnotation,.buttonWidgetAnnotation.pushButton):not(.hasBorder) > a:hover {
    opacity: 0.2;
    background-color: rgb(255 255 0);
    box-shadow: 0 2px 10px rgb(255 255 0);
}

.annotationLayer .linkAnnotation.hasBorder:hover {
    background-color: rgb(255 255 0 / 0.2);
}

.annotationLayer .hasBorder {
    background-size: 100% 100%;
}

.annotationLayer .textAnnotation img {
    position: absolute;
    cursor: pointer;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
}

.annotationLayer .buttonWidgetAnnotation:is(.checkBox,.radioButton) input,
.annotationLayer .choiceWidgetAnnotation select,
.annotationLayer .textWidgetAnnotation :is(input,textarea) {
    background-image: var(--annotation-unfocused-field-background);
    border: 2px solid var(--input-unfocused-border-color);
    box-sizing: border-box;
    font: calc(9px * var(--scale-factor)) sans-serif;
    height: 100%;
    margin: 0;
    vertical-align: top;
    width: 100%;
}

/* 省略重复的 hover, focus, checked 样式，结构类似，可按需展开 */

.annotationLayer .popupAnnotation {
    position: absolute;
    font-size: calc(9px * var(--scale-factor));
    pointer-events: none;
    width: -moz-max-content;
    width: max-content;
    max-width: 45%;
    height: auto;
}

.annotationLayer .popup {
    background-color: rgb(255 255 153);
    box-shadow: 0 calc(2px * var(--scale-factor)) calc(5px * var(--scale-factor)) rgb(136 136 136);
    border-radius: calc(2px * var(--scale-factor));
    outline: 1.5px solid rgb(255 255 74);
    padding: calc(6px * var(--scale-factor));
    cursor: pointer;
    font: message-box;
    white-space: normal;
    word-wrap: break-word;
    pointer-events: auto;
}

.annotationLayer .popupAnnotation.focused .popup {
    outline-width: 3px;
}

.annotationLayer .popup * {
    font-size: calc(9px * var(--scale-factor));
}

.annotationLayer .popup > .header {
    display: inline-block;
}

.annotationLayer .popup > .header h1 {
    display: inline;
}

.annotationLayer .popup > .header .popupDate {
    display: inline-block;
    margin-left: calc(5px * var(--scale-factor));
    width: -moz-fit-content;
    width: fit-content;
}

.annotationLayer .popupContent {
    border-top: 1px solid rgb(51 51 51);
    margin-top: calc(2px * var(--scale-factor));
    padding-top: calc(2px * var(--scale-factor));
}

.annotationLayer .richText > * {
    white-space: pre-wrap;
    font-size: calc(9px * var(--scale-factor));
}

.annotationLayer .popupTriggerArea {
    cursor: pointer;
}

.annotationLayer section svg {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
}

.annotationLayer .annotationTextContent {
    position: absolute;
    width: 100%;
    height: 100%;
    opacity: 0;
    color: transparent;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    pointer-events: none;
}

:is(.annotationLayer .annotationTextContent) span {
    width: 100%;
    display: inline-block;
}

.annotationLayer svg.quadrilateralsContainer {
    contain: strict;
    width: 0;
    height: 0;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
}
